name: render-quarto-markdown

run-name: Running Quarto Render on Markdown Files

on: [push]

env:
  MARKDOWN_DOCUMENT: Weekly_Team_Blog.qmd
  QMD_TITLE: \"Housing and AI Week No\" \"Community Capitals Week No\", \"Iowa Zoning Guide Week No\"
  QMD_AUTHOR: \[\"Harun Celik\"\] \[\"Housing and AI\"\] \[\"Community Capitals\"\], \[\"Iowa Zoning Guide\"\]
  QMD_TAGS: \[\"Week No\"\]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Git User
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          
      - name: Checkout Assignment Repository
        uses: actions/checkout@v4

      - name: Checkout Private Repo
        uses: actions/checkout@v2
        with:
          repository: DSPG-2024/Private-Blog
          token: ${{ secrets.BLOG_PAT_TOKEN }}
          path: DSPG-2024/Private-Blog     

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          install-r: "true"
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'          

      - name: View Repository Directories
        run: |
          ls -la
        
      - name: Install R Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: "always"
        
      - name: Install Quarto CLI
        run: |
          wget https://quarto.org/download/latest/quarto-linux-amd64.deb
          sudo dpkg -i quarto-linux-amd64.deb
          quarto check install
          
      - name: Render QMD File
        env:
          OUTPUT_FILE: "${{ github.actor }}_render_output.html"
        run: |
          R -e "quarto::quarto_render(input = 'Weekly_Team_Blog.qmd', output_format = 'html', output_file = Sys.getenv('OUTPUT_FILE'))"

      - name: Check if Title is Correct
        run: |
          echo "Checking YAML for Correct Title"
          sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT
          if sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT | grep -q "title: ${QMD_TITLE}"; then
            echo "Title exists in YAML block."
            exit 0
          else
            echo "Title does not exist in YAML block."
            exit 1
          fi

      - name: Check if Authors are Correct
        run: |
          echo "Checking YAML for Correct Author"
          sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT
          if sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT | grep -q "author: ${QMD_AUTHOR}"; then
            echo "Correct Author exists in YAML block."
            exit 0
          else
            echo "Correct Author does not exist in YAML block."
            exit 1
          fi

      - name: Check if Tags are Correct
        run: |
          echo "Checking YAML for Correct Tags"
          sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT
          if sed -n '/^\s*---\s*$/,/^\s*---\s*$/p' $MARKDOWN_DOCUMENT | grep -q "categories: ${QMD_TAGS}"; then
            echo "Correct Tags exist in YAML block."
            exit 0
          else
            echo "Correct Tags do not exist in YAML block."
            exit 1
          fi

      - name: Copy Markdown Files and Folders and Push
        if: success()
        env:
          GH_PAT: ${{ secrets.BLOG_PAT_TOKEN }}
        run: |
          echo "ATTEMPTING FILE PUSH"
          cd DSPG-2024/Private-Blog/Assignments/
          rm -rf ${{ github.event.repository.name }} || true 
          mkdir ${{ github.event.repository.name }}
          cd ${{ github.event.repository.name }}
          cp ../../../../Weekly_Team_Blog.qmd .
          cp -r ../../../../Data/ ./Data
          cp -r ../../../../imgs ./imgs
          git add .
          git status 
          git commit -m "Add markdown file output, data folder, and images of ${{ github.actor }}"
          git push https://${{ github.actor }}:${{ secrets.GH_PAT }}@github.com/DSPG-2024/Private-Blog.git
